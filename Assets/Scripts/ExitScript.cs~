using UnityEngine;
using System.Collections;

public class ExitScript : MonoBehaviour {
	
	public Rigidbody playerRB;
	public GameObject player;
	public float eB;
	private float eLX;
	private float eLZ;
	public bool exited;
	private AudioSource aud;
	private bool playedExitSound = false;
	private float dist;


	// lerp to exit
	private Vector3 playerPos;
	private Vector3 exitPos;
	private float lerpTime;
	private float currentLerpTime;

	// OnEnable called when script's object is enabled
	void OnEnable () {
		eLX = gameObject.transform.position.x;
		eLZ = gameObject.transform.position.z;
		exited = false;
		dist = Vector3.Distance(player.transform.position, gameObject.transform.position);
		aud = GetComponent<AudioSource> ();

	}

	// Update is called once per frame
	void Update () {
		if (player != null) {
			dist = Vector3.Distance(player.transform.position, gameObject.transform.position);
			if (exited == false) {
				//if Vector 3 distance from exit is under eB, and then changes exited to true
				if (dist <= eB){
					if (playedExitSound == false){
						playedExitSound = true;
						aud.Play();
					}
					exited = !exited;
				}

			} else {
				//lerp to exit - start
				playerPos = player.transform.position; 
				exitPos = new Vector3 (eLX, player.transform.position.y, eLZ);
				lerpTime = 3f;
				currentLerpTime += Time.deltaTime;
				if (currentLerpTime > lerpTime) {
					currentLerpTime = lerpTime;
				}
				float perc = currentLerpTime / lerpTime;
				player.transform.position = Vector3.Lerp (playerPos, exitPos, perc); 
				// lerp to exit - end

				player.transform.rotation = Quaternion.identity;
				playerRB.velocity = Vector3.zero;
				playerRB.angularVelocity = Vector3.zero; 
				player.transform.localScale += new Vector3 (-0.3f * Time.deltaTime, 1.5f * Time.deltaTime, 0);

			}
		}
	}
}